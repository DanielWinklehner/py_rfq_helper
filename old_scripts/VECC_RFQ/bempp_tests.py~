import bempp.api
import numpy as np
from scipy import meshgrid
from matplotlib import pyplot as plt

grid = bempp.api.shapes.sphere(h=0.1)
grid.plot()

space = bempp.api.function_space(grid, "DP", 0)

slp = bempp.api.operators.boundary.laplace.single_layer(space, space, space)

def f(x, n, domain_index, result):
    result[0] = x[0] + 1

rhs = bempp.api.GridFunction(space, fun=f)

sol, info = bempp.api.linalg.gmres(slp, rhs)

sol.plot()

nx = 100

x = np.linspace(-2, 2, nx)
y = np.linspace(-2, 2, nx)

grid_x, grid_y = meshgrid(x, y)
grid_z = np.zeros(nx*nx)

points = np.vstack([grid_x.flatten(), grid_y.flatten(), grid_z])

nearfield = bempp.api.operators.potential.laplace.single_layer(space, points)
scattered = nearfield * sol

print(scattered.shape)
plt.contour(grid_x.flatten(), grid_y.flatten(), scattered)
plt.show()
